<?php
	namespace sednasoft\virmisco\readlayer\entity;
	/**
	 * Do not edit. This class was automatically generated by codegen/read-layer/generator.php on
	 * 2016-01-13T22:53:08+01:00
	 */
	class ScientificName {
		/** @var null|string */
		protected $authorship = null;
		/** @var string */
		protected $genus = "";
		/** @var string */
		protected $id = "";
		/** @var null|string */
		protected $infraspecific_epithet = null;
		/** @var boolean */
		protected $is_mentioned = false;
		/** @var boolean */
		protected $is_parenthesized = false;
		/** @var boolean */
		protected $is_valid = false;
		/** @var string */
		protected $sequence_number = "";
		/** @var string */
		protected $specific_epithet = "";
		/** @var string */
		protected $specimen_carrier_id = "";
		/** @var null|string */
		protected $subgenus = null;
		/** @var integer|null */
		protected $year = null;

		/**
		 * @return null|string
		 */
		public function getAuthorship () {
			return $this->authorship;
		}

		/**
		 * @return string
		 */
		public function getGenus () {
			return $this->genus;
		}

		/**
		 * @return string
		 */
		public function getId () {
			return $this->id;
		}

		/**
		 * @return null|string
		 */
		public function getInfraspecificEpithet () {
			return $this->infraspecific_epithet;
		}

		/**
		 * @return boolean
		 */
		public function getIsMentioned () {
			return $this->is_mentioned;
		}

		/**
		 * @return boolean
		 */
		public function getIsParenthesized () {
			return $this->is_parenthesized;
		}

		/**
		 * @return boolean
		 */
		public function getIsValid () {
			return $this->is_valid;
		}

		/**
		 * @return string
		 */
		public function getSequenceNumber () {
			return $this->sequence_number;
		}

		/**
		 * @return string
		 */
		public function getSpecificEpithet () {
			return $this->specific_epithet;
		}

		/**
		 * @return string
		 */
		public function getSpecimenCarrierId () {
			return $this->specimen_carrier_id;
		}

		/**
		 * @return null|string
		 */
		public function getSubgenus () {
			return $this->subgenus;
		}

		/**
		 * @return integer|null
		 */
		public function getYear () {
			return $this->year;
		}
	}
