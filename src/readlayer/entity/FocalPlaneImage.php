<?php
	namespace sednasoft\virmisco\readlayer\entity;
	use sednasoft\virmisco\readlayer\valueobject\FocalPlaneImageExposureSettings;
	use sednasoft\virmisco\readlayer\valueobject\FocalPlaneImageFile;
	use sednasoft\virmisco\readlayer\valueobject\FocalPlaneImageHistogramSettings;
	use sednasoft\virmisco\readlayer\valueobject\FocalPlaneImagePostProcessingSettings;
	/**
	 * Do not edit. This class was automatically generated by codegen/read-layer/generator.php on
	 * 2016-01-13T22:53:08+01:00
	 */
	class FocalPlaneImage {
		/** @var string */
		public static $exposureSettingsClass = "sednasoft\\virmisco\\readlayer\\valueobject\\FocalPlaneImageExposureSettings";
		/** @var string */
		public static $fileClass = "sednasoft\\virmisco\\readlayer\\valueobject\\FocalPlaneImageFile";
		/** @var string */
		public static $histogramSettingsClass = "sednasoft\\virmisco\\readlayer\\valueobject\\FocalPlaneImageHistogramSettings";
		/** @var string */
		public static $postProcessingSettingsClass = "sednasoft\\virmisco\\readlayer\\valueobject\\FocalPlaneImagePostProcessingSettings";
		/** @var double|null */
		protected $exposure_settings__duration = null;
		/** @var double|null */
		protected $exposure_settings__gain = null;
		/** @var null|string */
		protected $file__creation_time = null;
		/** @var null|string */
		protected $file__modification_time = null;
		/** @var null|string */
		protected $file__real_path = null;
		/** @var null|string */
		protected $file__uri = null;
		/** @var double|null */
		protected $focus_position = null;
		/** @var integer|null */
		protected $histogram_settings__black_clip = null;
		/** @var double|null */
		protected $histogram_settings__gamma = null;
		/** @var integer|null */
		protected $histogram_settings__white_clip = null;
		/** @var string */
		protected $id = "";
		/** @var string */
		protected $photomicrograph_id = "";
		/** @var boolean|null */
		protected $post_processing_settings__shading = null;
		/** @var boolean|null */
		protected $post_processing_settings__sharpening = null;
		/** @var null|string */
		protected $presentation_uri = null;

		/**
		 * @return FocalPlaneImageExposureSettings|null
		 */
		public function getExposureSettings () {
			$className = self::$exposureSettingsClass;
			return $this->exposure_settings__duration !== null || $this->exposure_settings__gain !== null
				? new $className($this->exposure_settings__duration, $this->exposure_settings__gain)
				: null;
		}

		/**
		 * @return FocalPlaneImageFile|null
		 */
		public function getFile () {
			$className = self::$fileClass;
			return $this->file__real_path !== null || $this->file__uri !== null || $this->file__creation_time !== null || $this->file__modification_time !== null
				? new $className($this->file__real_path, $this->file__uri, $this->file__creation_time, $this->file__modification_time)
				: null;
		}

		/**
		 * @return double|null
		 */
		public function getFocusPosition () {
			return $this->focus_position;
		}

		/**
		 * @return FocalPlaneImageHistogramSettings|null
		 */
		public function getHistogramSettings () {
			$className = self::$histogramSettingsClass;
			return $this->histogram_settings__gamma !== null || $this->histogram_settings__black_clip !== null || $this->histogram_settings__white_clip !== null
				? new $className($this->histogram_settings__gamma, $this->histogram_settings__black_clip, $this->histogram_settings__white_clip)
				: null;
		}

		/**
		 * @return string
		 */
		public function getId () {
			return $this->id;
		}

		/**
		 * @return string
		 */
		public function getPhotomicrographId () {
			return $this->photomicrograph_id;
		}

		/**
		 * @return FocalPlaneImagePostProcessingSettings|null
		 */
		public function getPostProcessingSettings () {
			$className = self::$postProcessingSettingsClass;
			return $this->post_processing_settings__shading !== null || $this->post_processing_settings__sharpening !== null
				? new $className($this->post_processing_settings__shading, $this->post_processing_settings__sharpening)
				: null;
		}

		/**
		 * @return null|string
		 */
		public function getPresentationUri () {
			return $this->presentation_uri;
		}
	}
